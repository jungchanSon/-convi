{
  "name": "commit-buddy",
  "displayName": "commit-buddy",
  "description": "AI-powered commit message recommender for better Git conventions",
  "icon": "resources/icons/pluginIcon.png",
  "version": "1.0.1",
  "engines": {
    "vscode": "^1.99.0"
  },
  "categories": [
    "Other",
    "SCM Providers"
  ],
  "publisher": "convi",
  "activationEvents": [
    "onCommand:commit-buddy.showStagedDiff"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "commit-buddy.recommendMessage",
        "title": "Commit Buddy: AI 커밋 메시지 추천",
        "icon": {
          "light": "resources/icons/commitBuddyIcon.png",
          "dark": "resources/icons/commitBuddyIcon.png"
        }
      },
      {
        "command": "commit-buddy.createGitHook",
        "title": "Commit Buddy: 커밋 메시지 컨벤션 설정",
        "icon": {
          "light": "resources/icons/lintBuddyIcon.png",
          "dark": "resources/icons/lintBuddyIcon.png"
        }
      }
    ],
    "menus": {
      "scm/title": [
        {
          "command": "commit-buddy.recommendMessage",
          "group": "navigation",
          "when": "scmProvider == git"
        }
      ]
    },
    "configuration": {
      "title": "Commit Buddy",
      "properties": {
        "commitBuddy.LLM": {
          "type": "string",
          "enum": [
            "OpenAI",
            "Ollama"
          ],
          "markdownEnumDescriptions": [
            "OpenAI 모델 사용",
            "LLaMa 모델 사용"
          ],
          "enumItemLabels": [
            "OpenAI",
            "Ollama"
          ],
          "default": "Ollama",
          "description": "Commit Buddy에 사용할 모델"
        },
        "commitBuddy.openAI.ModelName": {
          "type": "string",
          "default": "gpt-4.1",
          "description": "OpenAI에서 사용할 LLM 모델 이름"
        },
        "commitBuddy.openAI.ModelKey": {
          "type": "string",
          "description": "OpenAI Key"
        },
        "commitBuddy.ollama.ModelName": {
          "type": "string",
          "default": "llama3.2:latest",
          "description": "Ollama에서 사용할 LLM 모델 이름"
        },
        "commitBuddy.maxDiffLength": {
          "type": "number",
          "default": 5000,
          "description": "LLM에 전송할 최대 Diff 길이 (글자 수)"
        },
        "commitBuddy.numSuggestions": {
          "type": "number",
          "default": 3,
          "description": "생성할 추천 메시지 개수"
        },
        "commitBuddy.regex": {
          "type": "string",
          "default": "",
          "description": "커밋 메시지 추천 & 컨벤션 규칙에 사용할 형식을 정의하는 정규식 예: (feat|fix|docs|style|refactor|test|chore):\\s(.+)"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.99.0",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@typescript-eslint/parser": "^8.28.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.23.0",
    "typescript": "^5.8.2"
  },
  "dependencies": {
    "openai": "^4.98.0",
    "simple-git": "^3.27.0"
  }
}
